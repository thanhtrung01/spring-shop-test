# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 17

#      - name: Build and test
#        run: |
#          mvn clean install
#          mvn test
      - name: Compile
        run : mvn compile --file pom.xml
<<<<<<< HEAD
#      - name: Deploy
#        run: mvn deploy --file pom.xml
=======
#       - name: Deploy
#         run: mvn deploy --file pom.xml
>>>>>>> 2f3ce6dab1406c206ba80fdce0fec6b7c654e668
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 17
#          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
#          settings-path: ${{ github.workspace }} # location for the settings.xml file
#
#      - name: Build with Maven
#        run: mvn package --file pom.xml
#
#      - name : Validate
#        run : mvn validate --file pom.xml
#
#      - name : Compile
#        run : mvn compile --file pom.xml
#
#      - name : Test
#        run : mvn test --file pom.xml
#
#      - name: Package
#        run: mvn package --file pom.xml

#      - name: Publish to GitHub Packages Apache Maven
#        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
#        env:
#          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN}}
