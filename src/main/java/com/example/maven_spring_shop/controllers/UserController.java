package com.example.maven_spring_shop.controllers;

import com.example.maven_spring_shop.models.User;
import com.example.maven_spring_shop.controllers.sevices.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RequestParam;

@Controller // This means that this class is a Controller
@RequestMapping(path="/user") // This means URL's start with /user (after Application path)
public class UserController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @PostMapping(path="/create") // Map ONLY POST Requests
    public @ResponseBody String addNewUser ( String username, String email, String password, Boolean role)
    {
        User n = new User();
        n.setUsername(username);
        n.setEmail(email);
        n.setPassword(password);
        n.setRole(role==null ? false : role);
        userRepository.save(n);
        return "Saved";
    }


    @GetMapping(path="/list-users")
    public @ResponseBody Iterable<User> getAllUsers() {
        return userRepository.findAll();
    }
    @GetMapping("/search") // Lấy thông tin User theo email
    public @ResponseBody  User findByEmail(@RequestParam("email") String email) {
        return userRepository.findByEmail(email);
    }

}
